// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Usuario {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  nombre        String
  apellido      String
  email         String   @unique
  password      String
  emailVerified Boolean
  rolid         Int
  rol           Rol      @relation(fields: [rolid], references: [id])
  cosechas      CosechaUsuario[]
  logger        Logger[]
}

model Rol {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  usuarios    Usuario[]
  permisos    RolPermiso[]
}

model Permiso {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  roles       RolPermiso[]
}

model RolPermiso {
  rol       Rol      @relation(fields: [rolId], references: [id])
  rolId     Int
  permiso   Permiso  @relation(fields: [permisoId], references: [id])
  permisoId Int
  @@id([rolId, permisoId])
}

model TipoProductor {
  id     Int      @id @default(autoincrement())
  nombre String   @unique
  productor Productor[]
  precio    Float @default(0.00) 
}

model Productor {
  id        Int      @id @default(autoincrement())
  nombre    String
  apellido  String
  cedula    Int
  nacionalidadId Int
  nacionalidad  Nacionalidad @relation(fields: [nacionalidadId], references: [id])
  telefonoLocal  String
  direccion1    String
  direccion2    String
  tipoid    Int
  tipo      TipoProductor     @relation(fields: [tipoid], references: [id])
  compraId  Compra[]
  financiamientoId Financiamiento[]
}

model Nacionalidad {
  id    Int      @id @default(autoincrement())
  nombre String   @unique
  productores Productor[]
}

model Cosecha {
  id        Int      @id @default(autoincrement())
  nombre    String
  usuarios  CosechaUsuario[]
  estado    Boolean?
  fechaInicio   DateTime?
  fechaCierre  DateTime?
}

model CosechaUsuario {
  cosecha   Cosecha @relation(fields: [cosechaId], references: [id])
  cosechaId Int
  usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  @@id([cosechaId, usuarioId])
}

model Rubro {
    id  Int     @id @default(autoincrement())
    descripcion String
    compra  Compra[]
}

model Compra {
    id      Int     @id @default(autoincrement())
    fecha   DateTime
    precio  Float @default(0.00) 
    cantidad Float @default(0.00)
    humedad Float @default(0.00) 
    merma   Float @default(0.00)
    mermaKg Float @default(0.00) 
    cantidadTotal Float @default(0.00) 
    montoTotal  Float @default(0.00)
    observaciones String
    rubroId Int
    rubro    Rubro @relation(fields: [rubroId], references: [id])
    productorId Int
    productor Productor @relation(fields: [productorId], references: [id])
}

model Financiamiento {
    id      Int     @id @default(autoincrement())
    fechaInicio   DateTime
    fechaVencimiento DateTime
    noLetra String
    monto   Float @default(0.00)
    estado  Boolean
    observaciones String
    productorId Int
    productor Productor @relation(fields: [productorId], references: [id])
}

model Logger {
    id      Int     @id @default(autoincrement())
    modulo String
    fecha   DateTime
    usuarioId Int
    usuario Usuario @relation(fields: [usuarioId], references: [id])
}